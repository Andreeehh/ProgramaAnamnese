/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularioInicial;

import BD.BD;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author andre
 */
public class aso extends javax.swing.JFrame {

    SimpleDateFormat sdfCampo = new SimpleDateFormat("dd-MM-yyyy");
    SimpleDateFormat sdfBanco = new SimpleDateFormat("yyyy-MM-dd");
    
    /**
     * Creates new form aso
     */
    public aso() {
        initComponents();
        fecharJanela();
        Variaveis.clickouPesquisa = 0;
        String timeStamp = new SimpleDateFormat("dd-MM-yyyy").format(Calendar.getInstance().getTime());
        data.setText(timeStamp);
        Icon lupa = new ImageIcon(getClass().getResource("lupa.gif"));
        pesquisar.setIcon(lupa);
        pesquisar1.setIcon(lupa);
        exCli.setEnabled(false);
        exAud.setEnabled(false);
        exEspi.setEnabled(false);
        exECG.setEnabled(false);
        exHemo.setEnabled(false);
        exChagas.setEnabled(false);
        exGlice.setEnabled(false);
        exRX.setEnabled(false);
        exAcui.setEnabled(false);
        exCopropar.setEnabled(false);
        exCoprocult.setEnabled(false);
        exVDRL.setEnabled(false);
        exOutras1.setEnabled(false);
        exOutras2.setEnabled(false);
        exOutras3.setEnabled(false);
        exOutras1Texto.setEnabled(false);
        exOutras2Texto.setEnabled(false);
        exOutras3Texto.setEnabled(false);
        id_Empresa.setVisible(false);
        nome.setEnabled(false);
RG.setEnabled(false);
dataNasc.setEnabled(false);
cargo.setEnabled(false);
nomeEmpresa.setEnabled(false);
        if(Variaveis.cadConExame == 1){
            idAso.setVisible(false);
            idAsoL.setVisible(false);
            imprimir.setVisible(false);
            pesquisar1.setVisible(false);
        }else{
            idAso.setVisible(true);
            idAsoL.setVisible(true);
            imprimir.setVisible(true);
id_Empresa.setEnabled(false); 
tipoExame.setEnabled(false); 
fisCalor.setEnabled(false); 
fisFrio.setEnabled(false); 
fisRuido.setEnabled(false); 
fisUmid.setEnabled(false); 
fisRad.setEnabled(false); 
fisOutros.setEnabled(false); 
quiGases.setEnabled(false); 
quiPoeiras.setEnabled(false); 
quiTintas.setEnabled(false); 
quiSolventes.setEnabled(false); 
quiProd.setEnabled(false); 
quiOutros.setEnabled(false); 
bioMicro.setEnabled(false); 
bioOutros.setEnabled(false); 
ergoMovPeso.setEnabled(false); 
ergoPost.setEnabled(false); 
ergoEsf.setEnabled(false); 
ergoTrabSentado.setEnabled(false); 
ergoTrabPe.setEnabled(false); 
ergoMovRep.setEnabled(false); 
ergoOutros.setEnabled(false); 
ausenciaRisc.setEnabled(false); 
exCli.setEnabled(false); 
exAud.setEnabled(false); 
exEspi.setEnabled(false); 
exECG.setEnabled(false); 
exHemo.setEnabled(false); 
exChagas.setEnabled(false); 
exGlice.setEnabled(false); 
exRX.setEnabled(false); 
exAcui.setEnabled(false); 
exCopropar.setEnabled(false); 
exCoprocult.setEnabled(false); 
exVDRL.setEnabled(false); 
exOutras1.setEnabled(false); 
exOutras2.setEnabled(false); 
exOutras3.setEnabled(false); 
exOutras1Texto.setEnabled(false); 
exOutras2Texto.setEnabled(false); 
exOutras3Texto.setEnabled(false); 
conclusao.setEnabled(false); 
restricoes.setEnabled(false);
data.setEnabled(false);

idPaciente.setEnabled(false);
            cadAso.setText("Atualizar");
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        riscos = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        idPaciente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nome = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        nomeEmpresa = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        dataNasc = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        RG = new javax.swing.JTextField();
        cargo = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        pesquisar = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        tipoExame = new javax.swing.JComboBox<>();
        id_Empresa = new javax.swing.JTextField();
        idAso = new javax.swing.JTextField();
        idAsoL = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        data = new javax.swing.JTextField();
        pesquisar1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        fisCalor = new javax.swing.JCheckBox();
        fisUmid = new javax.swing.JCheckBox();
        fisRad = new javax.swing.JCheckBox();
        fisFrio = new javax.swing.JCheckBox();
        fisRuido = new javax.swing.JCheckBox();
        fisOutros = new javax.swing.JCheckBox();
        quiProd = new javax.swing.JCheckBox();
        quiPoeiras = new javax.swing.JCheckBox();
        quiTintas = new javax.swing.JCheckBox();
        quiOutros = new javax.swing.JCheckBox();
        quiGases = new javax.swing.JCheckBox();
        quiSolventes = new javax.swing.JCheckBox();
        bioMicro = new javax.swing.JCheckBox();
        bioOutros = new javax.swing.JCheckBox();
        ergoMovRep = new javax.swing.JCheckBox();
        ergoEsf = new javax.swing.JCheckBox();
        ergoMovPeso = new javax.swing.JCheckBox();
        ergoPost = new javax.swing.JCheckBox();
        ergoTrabSentado = new javax.swing.JCheckBox();
        ergoTrabPe = new javax.swing.JCheckBox();
        ergoOutros = new javax.swing.JCheckBox();
        ausenciaRisc = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        check1 = new javax.swing.JCheckBox();
        check2 = new javax.swing.JCheckBox();
        check5 = new javax.swing.JCheckBox();
        check3 = new javax.swing.JCheckBox();
        check8 = new javax.swing.JCheckBox();
        check9 = new javax.swing.JCheckBox();
        check7 = new javax.swing.JCheckBox();
        check6 = new javax.swing.JCheckBox();
        check4 = new javax.swing.JCheckBox();
        check10 = new javax.swing.JCheckBox();
        check11 = new javax.swing.JCheckBox();
        check12 = new javax.swing.JCheckBox();
        check13 = new javax.swing.JCheckBox();
        exAud = new javax.swing.JTextField();
        exCli = new javax.swing.JTextField();
        exHemo = new javax.swing.JTextField();
        exEspi = new javax.swing.JTextField();
        exAcui = new javax.swing.JTextField();
        exRX = new javax.swing.JTextField();
        exGlice = new javax.swing.JTextField();
        exChagas = new javax.swing.JTextField();
        exECG = new javax.swing.JTextField();
        exCopropar = new javax.swing.JTextField();
        exCoprocult = new javax.swing.JTextField();
        exVDRL = new javax.swing.JTextField();
        exOutras3Texto = new javax.swing.JTextField();
        exOutras2Texto = new javax.swing.JTextField();
        exOutras1Texto = new javax.swing.JTextField();
        exOutras1 = new javax.swing.JTextField();
        exOutras2 = new javax.swing.JTextField();
        exOutras3 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        conclusao = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        restricoes = new javax.swing.JTextField();
        cadAso = new javax.swing.JButton();
        imprimir = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jLabel1.setText("idPaciente");

        idPaciente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                idPacienteFocusLost(evt);
            }
        });

        jLabel3.setText("Nome");

        jLabel4.setText("Tipo Exame");

        jLabel5.setText("Data Nascimento");

        jLabel6.setText("RG");

        jLabel12.setText("Cargo");

        pesquisar.setText("...");
        pesquisar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pesquisarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pesquisarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pesquisarMouseExited(evt);
            }
        });

        jLabel17.setText("Nome Empresa");

        tipoExame.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admissional", "Periódico", "Demissional", "Retorna ao Trabalho", "Mudança de cargo/função", "Acidente do Trabalho", "Doença Ocupacional", "Doença/Acidente não Ocupacional", "Parto" }));

        idAso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                idAsoFocusLost(evt);
            }
        });

        idAsoL.setText("Digite o ID da aso:");

        jLabel13.setText("Data Exame");

        data.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataActionPerformed(evt);
            }
        });

        pesquisar1.setText("...");
        pesquisar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pesquisar1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pesquisar1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pesquisar1MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(id_Empresa, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(53, 53, 53)
                        .addComponent(tipoExame, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cargo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel1)
                                    .addComponent(idAsoL, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(idAso, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(idPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                        .addComponent(RG)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pesquisar)
                            .addComponent(pesquisar1))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel17)
                                            .addComponent(jLabel3))
                                        .addGap(10, 10, 10)))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(dataNasc, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(nomeEmpresa, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addComponent(jLabel13)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(idPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pesquisar)
                    .addComponent(jLabel3)
                    .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(RG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(dataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(nomeEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(cargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tipoExame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idAso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idAsoL)
                    .addComponent(jLabel13)
                    .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pesquisar1))
                .addGap(37, 37, 37)
                .addComponent(id_Empresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(200, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 836, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 616, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(40, Short.MAX_VALUE)))
        );

        riscos.addTab("Dados Paciente", jPanel1);

        jPanel3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPanel3FocusLost(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Físicos:");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel7.setText("Químicos:");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel8.setText("Biológicos");

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel9.setText("Ergonômicos:");

        fisCalor.setText("Calor");

        fisUmid.setText("Umidade");

        fisRad.setText("Radiação não-ionizante");

        fisFrio.setText("Frio");

        fisRuido.setText("Ruído");

        fisOutros.setText("Outros:");

        quiProd.setText("Produtos de Limpeza Uso Doméstico");

        quiPoeiras.setText("Poeiras");

        quiTintas.setText("Tintas");

        quiOutros.setText("Outros:");

        quiGases.setText("Gases");

        quiSolventes.setText("Solventes");

        bioMicro.setText("Microorganismos em geral");

        bioOutros.setText("Outros:");

        ergoMovRep.setText("Movimentos Repetitivos");

        ergoEsf.setText("Esforço Físico");

        ergoMovPeso.setText("Movimentação de Pesos");

        ergoPost.setText("Postura Inadequada");

        ergoTrabSentado.setText("Trabalho predominantemente sentado");

        ergoTrabPe.setText("Trabalho predominantemente em pé");

        ergoOutros.setText("Outros:");

        ausenciaRisc.setText("Ausência de Riscos Ocupacionais");
        ausenciaRisc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ausenciaRiscActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(ausenciaRisc)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bioMicro)
                            .addComponent(fisCalor)
                            .addComponent(fisUmid)
                            .addComponent(quiGases)
                            .addComponent(quiSolventes)
                            .addComponent(ergoMovPeso)
                            .addComponent(ergoEsf)
                            .addComponent(ergoMovRep))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quiPoeiras)
                            .addComponent(quiProd)
                            .addComponent(fisFrio)
                            .addComponent(fisRad)
                            .addComponent(ergoTrabPe)
                            .addComponent(ergoPost)
                            .addComponent(ergoTrabSentado)
                            .addComponent(bioOutros))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fisRuido)
                            .addComponent(fisOutros)
                            .addComponent(quiTintas)
                            .addComponent(quiOutros)
                            .addComponent(ergoOutros))
                        .addGap(170, 170, 170))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel2)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel7)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel8))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(fisFrio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fisRad))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(fisCalor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fisUmid))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(fisRuido)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fisOutros)))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(quiPoeiras)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(quiProd))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(quiGases)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(quiSolventes))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(quiTintas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(quiOutros)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bioMicro)
                            .addComponent(bioOutros))))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel9))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ergoPost)
                                    .addComponent(ergoOutros))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ergoTrabSentado))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(ergoMovPeso)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ergoEsf)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ergoTrabPe)
                            .addComponent(ergoMovRep))))
                .addGap(18, 18, 18)
                .addComponent(ausenciaRisc)
                .addContainerGap(247, Short.MAX_VALUE))
        );

        riscos.addTab("Riscos Ocupacionais", jPanel3);

        check1.setText("Avaliação Clínica:");
        check1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check1ActionPerformed(evt);
            }
        });

        check2.setText("Audiometria:");
        check2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check2ActionPerformed(evt);
            }
        });

        check5.setText("ECG:");
        check5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check5ActionPerformed(evt);
            }
        });

        check3.setText("Espirometria:");
        check3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check3ActionPerformed(evt);
            }
        });

        check8.setText("RX do Tórax:");
        check8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check8ActionPerformed(evt);
            }
        });

        check9.setText("Acuidade Visual:");
        check9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check9ActionPerformed(evt);
            }
        });

        check7.setText("Glicemia:");
        check7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check7ActionPerformed(evt);
            }
        });

        check6.setText("Chagas:");
        check6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check6ActionPerformed(evt);
            }
        });

        check4.setText("Hemograma:");
        check4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check4ActionPerformed(evt);
            }
        });

        check10.setText("Coproparasitológico:");
        check10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check10ActionPerformed(evt);
            }
        });

        check11.setText("Coprocultura:");
        check11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check11ActionPerformed(evt);
            }
        });

        check12.setText("VDRL:");
        check12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check12ActionPerformed(evt);
            }
        });

        check13.setText("Outras");
        check13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check13ActionPerformed(evt);
            }
        });

        exAud.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                exAudFocusLost(evt);
            }
        });

        exCli.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                exCliFocusLost(evt);
            }
        });
        exCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exCliActionPerformed(evt);
            }
        });

        exHemo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                exHemoFocusLost(evt);
            }
        });

        exEspi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                exEspiFocusLost(evt);
            }
        });

        exAcui.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                exAcuiFocusLost(evt);
            }
        });

        exRX.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                exRXFocusLost(evt);
            }
        });

        exGlice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                exGliceFocusLost(evt);
            }
        });

        exChagas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                exChagasFocusLost(evt);
            }
        });

        exECG.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                exECGFocusLost(evt);
            }
        });

        exCopropar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                exCoproparFocusLost(evt);
            }
        });

        exCoprocult.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                exCoprocultFocusLost(evt);
            }
        });

        exVDRL.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                exVDRLFocusLost(evt);
            }
        });
        exVDRL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exVDRLActionPerformed(evt);
            }
        });

        exOutras3Texto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                exOutras3TextoFocusLost(evt);
            }
        });

        exOutras2Texto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                exOutras2TextoFocusLost(evt);
            }
        });

        exOutras1Texto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                exOutras1TextoFocusLost(evt);
            }
        });

        exOutras1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                exOutras1FocusLost(evt);
            }
        });

        exOutras2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                exOutras2FocusLost(evt);
            }
        });

        exOutras3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                exOutras3FocusLost(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel10.setText("Conclusão:");

        conclusao.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        conclusao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Apto", "Apto com Restrições", "Inapto" }));

        jLabel11.setText("Restrições");

        cadAso.setText("Cadastrar");
        cadAso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadAsoActionPerformed(evt);
            }
        });

        imprimir.setText("Imprimir");
        imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(cadAso)
                        .addGap(157, 157, 157)
                        .addComponent(imprimir))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(check2)
                            .addComponent(check1)
                            .addComponent(check3)
                            .addComponent(check4)
                            .addComponent(check8)
                            .addComponent(check7)
                            .addComponent(check6)
                            .addComponent(check5)
                            .addComponent(check9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(conclusao, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(exRX, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(exEspi, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(exHemo, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(exCli, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(exAud, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(exChagas, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(exGlice, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(exECG, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(114, 114, 114)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(check13)
                                    .addComponent(check12)
                                    .addComponent(check11)
                                    .addComponent(check10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(exOutras1Texto)
                                    .addComponent(exOutras2Texto)
                                    .addComponent(exOutras3Texto))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(exOutras2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(exOutras3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(exOutras1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(exVDRL, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(exCopropar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(exCoprocult, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(exAcui, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(restricoes))))
                .addGap(96, 96, 96))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(check1)
                                    .addComponent(exCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(check2)
                                    .addComponent(exAud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(check3)
                                    .addComponent(exEspi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(check4)
                                    .addComponent(exHemo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(check10)
                                .addGap(18, 18, 18)
                                .addComponent(check11)
                                .addGap(18, 18, 18)
                                .addComponent(check12)
                                .addGap(18, 18, 18)
                                .addComponent(check13))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(exCopropar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(exCoprocult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(exVDRL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(check5)
                            .addComponent(exECG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(check6)
                            .addComponent(exChagas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(check7)
                            .addComponent(exGlice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exOutras1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(exOutras1Texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exOutras2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(exOutras2Texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exOutras3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(exOutras3Texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(check8)
                    .addComponent(exRX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(check9)
                    .addComponent(exAcui, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(conclusao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(restricoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cadAso)
                    .addComponent(imprimir))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        riscos.addTab("Exames Complementares", jPanel4);

        jButton1.setText("Sair");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(riscos, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(670, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(93, 93, 93))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(riscos)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(29, 29, 29))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void idPacienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idPacienteFocusLost
        // TODO add your handling code here:
        if(!idPaciente.getText().equals("")){
            pesquisarPaciente();
        }

    }//GEN-LAST:event_idPacienteFocusLost

    private void pesquisarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pesquisarMouseClicked
        // TODO add your handling code here:
        Variaveis.exame = 1;
        new PesquisarPaciente().setVisible(true);
    }//GEN-LAST:event_pesquisarMouseClicked

    private void pesquisarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pesquisarMouseEntered
        // TODO add your handling code here:
        Icon lupaSelecionada = new ImageIcon(getClass().getResource("lupaselecionada.gif"));
        pesquisar.setIcon(lupaSelecionada);
    }//GEN-LAST:event_pesquisarMouseEntered

    private void pesquisarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pesquisarMouseExited
        // TODO add your handling code here:
        Icon lupa = new ImageIcon(getClass().getResource("lupa.gif"));

        pesquisar.setIcon(lupa);

    }//GEN-LAST:event_pesquisarMouseExited

    private void jPanel3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel3FocusLost
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jPanel3FocusLost

    private void exAudFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exAudFocusLost
        // TODO add your handling code here:
        exAud.setText(validaData(exAud.getText()));
    }//GEN-LAST:event_exAudFocusLost

    private void check7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check7ActionPerformed
        // TODO add your handling code here:
        if(checkBox(check7) == 1){
            exGlice.setEnabled(true);
        }else{
            exGlice.setEnabled(false);
        }
    }//GEN-LAST:event_check7ActionPerformed

    private void check8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check8ActionPerformed
        // TODO add your handling code here:
        if(checkBox(check8) == 1){
            exRX.setEnabled(true);
            
        }else{
            exRX.setEnabled(false);
        }
    }//GEN-LAST:event_check8ActionPerformed

    private void exCliFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exCliFocusLost
        // TODO add your handling code here:
        exCli.setText(validaData(exCli.getText()));
    }//GEN-LAST:event_exCliFocusLost

    private void exHemoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exHemoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_exHemoFocusLost

    private void exEspiFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exEspiFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_exEspiFocusLost

    private void exAcuiFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exAcuiFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_exAcuiFocusLost

    private void exRXFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exRXFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_exRXFocusLost

    private void exGliceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exGliceFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_exGliceFocusLost

    private void exChagasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exChagasFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_exChagasFocusLost

    private void exECGFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exECGFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_exECGFocusLost

    private void exCoproparFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exCoproparFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_exCoproparFocusLost

    private void exCoprocultFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exCoprocultFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_exCoprocultFocusLost

    private void exVDRLFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exVDRLFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_exVDRLFocusLost

    private void exOutras3TextoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exOutras3TextoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_exOutras3TextoFocusLost

    private void exOutras2TextoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exOutras2TextoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_exOutras2TextoFocusLost

    private void exOutras1TextoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exOutras1TextoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_exOutras1TextoFocusLost

    private void exOutras1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exOutras1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_exOutras1FocusLost

    private void exOutras2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exOutras2FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_exOutras2FocusLost

    private void exOutras3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exOutras3FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_exOutras3FocusLost

    private void exVDRLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exVDRLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exVDRLActionPerformed

    private void cadAsoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadAsoActionPerformed
        // TODO add your handling code here:
        if(cadAso.getText().equals("Cadastrar")){
            cadAso();
        }else{
            attAso();
        }
        int i = Funcoes.voltar("Deseja Imprimir a ASO?","SIM","NÃO");
        if(i == 1){
            Connection c = con.conectar();
            PreparedStatement pesquisarStmt;
            try {
                pesquisarStmt = c.prepareStatement("SELECT idAso from aso WHERE id_Paciente = ? AND id_Empresa = ? AND tipoExame = ? ");
                pesquisarStmt.setInt(1,Integer.parseInt(idPaciente.getText()));
                pesquisarStmt.setInt(2,Integer.parseInt(id_Empresa.getText()));
                pesquisarStmt.setString(3, tipoExame.getSelectedItem().toString());
                ResultSet rs = pesquisarStmt.executeQuery();
                while(rs.next()){
                    idAso.setText(rs.getString("idAso"));
                }
        
                String src = "ASO.jasper";
        
                JasperPrint jasperPrint = null;
                try{
                    HashMap params = new HashMap<>();
            
                    params.put("idAso",Integer.parseInt(idAso.getText()));
                    jasperPrint = JasperFillManager.fillReport(src, params , c); 
                } catch (JRException ex){
                    System.out.println("Error: "+ ex);
                }
        
        JasperViewer view = new JasperViewer(jasperPrint, false);
        
        view.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(aso.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_cadAsoActionPerformed

    private void check1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check1ActionPerformed
        // TODO add your handling code here:
        if(checkBox(check1) == 1){
            exCli.setEnabled(true);
            
        }else{
            exCli.setEnabled(false);
        }
    }//GEN-LAST:event_check1ActionPerformed

    private void check2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check2ActionPerformed
        // TODO add your handling code here:
        if(checkBox(check2) == 1){
            exAud.setEnabled(true);
            
        }else{
            exAud.setEnabled(false);
        }
    }//GEN-LAST:event_check2ActionPerformed

    private void check3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check3ActionPerformed
        // TODO add your handling code here:
        if(checkBox(check3) == 1){
            exEspi.setEnabled(true);
            
        }else{
            exEspi.setEnabled(false);
        }
    }//GEN-LAST:event_check3ActionPerformed

    private void check4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check4ActionPerformed
        // TODO add your handling code here:
        if(checkBox(check4) == 1){
            exHemo.setEnabled(true);
            
        }else{
            exHemo.setEnabled(false);
        }
    }//GEN-LAST:event_check4ActionPerformed

    private void check5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check5ActionPerformed
        // TODO add your handling code here:
        if(checkBox(check5) == 1){
            exECG.setEnabled(true);
            
        }else{
            exECG.setEnabled(false);
        }
    }//GEN-LAST:event_check5ActionPerformed

    private void check6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check6ActionPerformed
        // TODO add your handling code here:
        if(checkBox(check6) == 1){
            exChagas.setEnabled(true);
            
        }else{
            exChagas.setEnabled(false);
        }
    }//GEN-LAST:event_check6ActionPerformed

    private void check9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check9ActionPerformed
        // TODO add your handling code here:
        if(checkBox(check9) == 1){
            exAcui.setEnabled(true);
            
        }else{
            exAcui.setEnabled(false);
        }
    }//GEN-LAST:event_check9ActionPerformed

    private void check10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check10ActionPerformed
        // TODO add your handling code here:
        if(checkBox(check10) == 1){
            exCopropar.setEnabled(true);
            
        }else{
            exCopropar.setEnabled(false);
        }
    }//GEN-LAST:event_check10ActionPerformed

    private void check11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check11ActionPerformed
        // TODO add your handling code here:
        if(checkBox(check11) == 1){
            exCoprocult.setEnabled(true);
            
        }else{
            exCoprocult.setEnabled(false);
        }
    }//GEN-LAST:event_check11ActionPerformed

    private void check12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check12ActionPerformed
        // TODO add your handling code here:
        if(checkBox(check12) == 1){
            exVDRL.setEnabled(true);
            
        }else{
            exVDRL.setEnabled(false);
        }
    }//GEN-LAST:event_check12ActionPerformed

    private void check13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check13ActionPerformed
        // TODO add your handling code here:
        if(checkBox(check13) == 1){
            exOutras1.setEnabled(true);
            exOutras2.setEnabled(true);
            exOutras3.setEnabled(true);
            exOutras1Texto.setEnabled(true);
            exOutras2Texto.setEnabled(true);
            exOutras3Texto.setEnabled(true);
            
        }else{
            exOutras1.setEnabled(false);
            exOutras2.setEnabled(false);
            exOutras3.setEnabled(false);
            exOutras1Texto.setEnabled(false);
            exOutras2Texto.setEnabled(false);
            exOutras3Texto.setEnabled(false);
        }
    }//GEN-LAST:event_check13ActionPerformed

    private void exCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exCliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exCliActionPerformed
    
    private void fecharJanela(){
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
    }
        private void exitForm(java.awt.event.WindowEvent evt) {
        //Variaveis.voltar = 0;
        //Variaveis.fechar = 0;
        //new ConfirmarSaida().setVisible(true);
        int aux = Funcoes.voltar("Deseja voltar ao menu de opções?","SIM","NÃO");
        if (aux == 1){
            new MenuOpcoes().setVisible(true);
            this.dispose();
        }
    }
        public String formataData(java.sql.Date a){
        
        
        
    return sdfCampo.format(a);
    }
        
    private void imprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirActionPerformed
        // TODO add your handling code here:
        Connection c = con.conectar();
            PreparedStatement pesquisarStmt;
            try {
                pesquisarStmt = c.prepareStatement("SELECT idAso from aso WHERE id_Paciente = ? AND id_Empresa = ? AND tipoExame = ? ");
                pesquisarStmt.setInt(1,Integer.parseInt(idPaciente.getText()));
                pesquisarStmt.setInt(2,Integer.parseInt(id_Empresa.getText()));
                pesquisarStmt.setString(3, tipoExame.getSelectedItem().toString());
                ResultSet rs = pesquisarStmt.executeQuery();
                while(rs.next()){
                    idAso.setText(rs.getString("idAso"));
                }
        
                String src = "ASO.jasper";
        
                JasperPrint jasperPrint = null;
                try{
                    HashMap params = new HashMap<>();
            
                    params.put("idAso",Integer.parseInt(idAso.getText()));
                    jasperPrint = JasperFillManager.fillReport(src, params , c); 
                } catch (JRException ex){
                    System.out.println("Error: "+ ex);
                }
        
        JasperViewer view = new JasperViewer(jasperPrint, false);
        
        view.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(aso.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }//GEN-LAST:event_imprimirActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int aux = Funcoes.voltar("Deseja voltar ao menu de opções?","SIM","NÃO");
        if (aux == 1){
            new MenuOpcoes().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ausenciaRiscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ausenciaRiscActionPerformed
        // TODO add your handling code here:
        ausencia();
    }//GEN-LAST:event_ausenciaRiscActionPerformed

    private boolean rBoolean(int a){
        if(a == 1)
            return true;
        else
            return false;
    }
    private void idAsoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idAsoFocusLost
        // TODO add your handling code here:
        if(!idAso.getText().equals("")){
        Connection c = con.conectar();
            PreparedStatement pesquisarStmt;
            try {
                pesquisarStmt = c.prepareStatement("SELECT * from aso t0 INNER JOIN paciente t1 on t0.id_Paciente = t1.idPaciente INNER JOIN empresa t2 ON t0.id_Empresa = t2.idEmpresa WHERE idAso= ?");
                pesquisarStmt.setInt(1,Integer.parseInt(idAso.getText()));
                ResultSet rs = pesquisarStmt.executeQuery();
                while(rs.next()){
                    idPaciente.setText(rs.getString("id_Paciente"));
                    id_Empresa.setText(rs.getString("id_Empresa"));
                    tipoExame.setSelectedItem(rs.getString("tipoExame"));
                    fisCalor.setSelected(rBoolean((rs.getInt("fisCalor"))));
                    fisFrio.setSelected(rBoolean((rs.getInt("fisFrio"))));
                    fisRuido.setSelected(rBoolean((rs.getInt("fisRuido"))));
                    fisUmid.setSelected(rBoolean((rs.getInt("fisUmid"))));
                    fisRad.setSelected(rBoolean((rs.getInt("fisRad"))));
                    fisOutros.setSelected(rBoolean((rs.getInt("fisOutros"))));
                    quiGases.setSelected(rBoolean((rs.getInt("quiGases"))));
                    quiPoeiras.setSelected(rBoolean((rs.getInt("quiPoeiras"))));
                    quiTintas.setSelected(rBoolean((rs.getInt("quiTintas"))));
                    quiSolventes.setSelected(rBoolean((rs.getInt("quiSolventes"))));
                    quiProd.setSelected(rBoolean((rs.getInt("quiProd"))));
                    quiOutros.setSelected(rBoolean((rs.getInt("quiOutros"))));
                    bioMicro.setSelected(rBoolean((rs.getInt("bioMicro"))));
                    bioOutros.setSelected(rBoolean((rs.getInt("bioOutros"))));
                    ergoMovPeso.setSelected(rBoolean((rs.getInt("ergoMovPeso"))));
                    ergoPost.setSelected(rBoolean((rs.getInt("ergoPost"))));
                    ergoEsf.setSelected(rBoolean((rs.getInt("ergoEsf"))));
                    ergoTrabSentado.setSelected(rBoolean((rs.getInt("ergoTrabSentado"))));
                    ergoTrabPe.setSelected(rBoolean((rs.getInt("ergoTrabPe"))));
                    ergoMovRep.setSelected(rBoolean((rs.getInt("ergoMovRep"))));
                    ergoOutros.setSelected(rBoolean((rs.getInt("ergoOutros"))));
                    ausenciaRisc.setSelected(rBoolean((rs.getInt("ausenciaRisc"))));
exCli.setText(rs.getString("exCli"));
exAud.setText(rs.getString("exAud"));
exEspi.setText(rs.getString("exEspi"));
exECG.setText(rs.getString("exECG"));
exHemo.setText(rs.getString("exHemo"));
exChagas.setText(rs.getString("exChagas"));
exGlice.setText(rs.getString("exGlice"));
exRX.setText(rs.getString("exRX"));
exAcui.setText(rs.getString("exAcui"));
exCopropar.setText(rs.getString("exCopropar"));
exCoprocult.setText(rs.getString("exCoprocult"));
exVDRL.setText(rs.getString("exVDRL"));
exOutras1.setText(rs.getString("exOutras1"));
exOutras2.setText(rs.getString("exOutras2"));
exOutras3.setText(rs.getString("exOutras3"));
exOutras1Texto.setText(rs.getString("exOutras1Texto"));
exOutras2Texto.setText(rs.getString("exOutras2Texto"));
exOutras3Texto.setText(rs.getString("exOutras3Texto"));
conclusao.setSelectedItem(rs.getString("conclusao"));
restricoes.setText(rs.getString("restricoes"));
data.setText(formataData(rs.getDate("data")));
nome.setText(rs.getString("t1.nome"));
RG.setText(rs.getString("t1.RG"));
dataNasc.setText(rs.getString("t1.dataNasc"));
cargo.setText(rs.getString("t1.Cargo"));
nomeEmpresa.setText(rs.getString("t2.nome"));
            
                }
                int aux = Funcoes.voltar("Deseja atualizar a ASO?","SIM","NÃO");
            if(aux == 1){
                idPaciente.setEnabled(true);
                data.setEnabled(true);
tipoExame.setEnabled(true); 
fisCalor.setEnabled(true); 
fisFrio.setEnabled(true); 
fisRuido.setEnabled(true); 
fisUmid.setEnabled(true); 
fisRad.setEnabled(true); 
fisOutros.setEnabled(true); 
quiGases.setEnabled(true); 
quiPoeiras.setEnabled(true); 
quiTintas.setEnabled(true); 
quiSolventes.setEnabled(true); 
quiProd.setEnabled(true); 
quiOutros.setEnabled(true); 
bioMicro.setEnabled(true); 
bioOutros.setEnabled(true); 
ergoMovPeso.setEnabled(true); 
ergoPost.setEnabled(true); 
ergoEsf.setEnabled(true); 
ergoTrabSentado.setEnabled(true); 
ergoTrabPe.setEnabled(true); 
ergoMovRep.setEnabled(true); 
ergoOutros.setEnabled(true); 
ausenciaRisc.setEnabled(true); 
exCli.setEnabled(true); 
exAud.setEnabled(true); 
exEspi.setEnabled(true); 
exECG.setEnabled(true); 
exHemo.setEnabled(true); 
exChagas.setEnabled(true); 
exGlice.setEnabled(true); 
exRX.setEnabled(true); 
exAcui.setEnabled(true); 
exCopropar.setEnabled(true); 
exCoprocult.setEnabled(true); 
exVDRL.setEnabled(true); 
exOutras1.setEnabled(true); 
exOutras2.setEnabled(true); 
exOutras3.setEnabled(true); 
exOutras1Texto.setEnabled(true); 
exOutras2Texto.setEnabled(true); 
exOutras3Texto.setEnabled(true); 
conclusao.setEnabled(true); 
restricoes.setEnabled(true); 
            }else{
                cadAso.setVisible(false);
            }
            }catch (SQLException ex) {
                Logger.getLogger(aso.class.getName()).log(Level.SEVERE, null, ex);
            }
        } 
    }//GEN-LAST:event_idAsoFocusLost

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        if(Variaveis.clickouPesquisa == 1){
            idPaciente.setText(Variaveis.idPacientePesquisa);
        }
        if(Variaveis.clickouPesquisa == 2){
            idAso.setText(Variaveis.idAsoPesquisa);
        }
    }//GEN-LAST:event_formWindowGainedFocus

    private void dataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataActionPerformed

    private void pesquisar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pesquisar1MouseClicked
        // TODO add your handling code here:
        Variaveis.exame = 1;
        new PesquisarAso().setVisible(true);
        
    }//GEN-LAST:event_pesquisar1MouseClicked

    private void pesquisar1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pesquisar1MouseEntered
        // TODO add your handling code here:
        Icon lupaSelecionada = new ImageIcon(getClass().getResource("lupaselecionada.gif"));
        pesquisar1.setIcon(lupaSelecionada);
        
    }//GEN-LAST:event_pesquisar1MouseEntered

    private void pesquisar1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pesquisar1MouseExited
        // TODO add your handling code here:
        Icon lupa = new ImageIcon(getClass().getResource("lupa.gif"));

        pesquisar1.setIcon(lupa);
    }//GEN-LAST:event_pesquisar1MouseExited
    
    
    
    public String validaData(String a){
        if((a.length()>0 && a.length() < 8) || a.length() > 10 || a.length() == 9){
        JOptionPane.showMessageDialog(null, "Data no formato errado"
                    + "\nFormatos aceitos:"
                    + "\n(dd-mm-aaaa)"
                    + "\n(ddmmaaaa)"
                    + "\n(dd/mm/aaaa)");
                    return null;
        }
        if((a.contains("/") || a.contains("-") )){
            a = a.replace('/', '-');
        }else{
            a = (a.substring(0,2)+"-"+a.substring(2,4)+"-"+a.substring(4,8));
        }
        
        
        try {
            return sdfCampo.format(sdfCampo.parse(a));
        } catch (ParseException ex) {
            Logger.getLogger(aso.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
        public String cadData(String a){
        if((a.length()>0 && a.length() < 8) || a.length() > 10 || a.length() == 9){
        JOptionPane.showMessageDialog(null, "Data no formato errado"
                    + "\nFormatos aceitos:"
                    + "\n(dd-mm-aaaa)"
                    + "\n(ddmmaaaa)"
                    + "\n(dd/mm/aaaa)");
                    return null;
        }
        if((a.contains("/") || a.contains("-") )){
            a = a.replace('/', '-');
        }else{
            a = (a.substring(0,2)+"-"+a.substring(2,4)+"-"+a.substring(4,8));
            
        }
        try {
            a = sdfCampo.format(sdfCampo.parse(a));
        } catch (ParseException ex) {
            Logger.getLogger(aso.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            return sdfBanco.format(sdfCampo.parse(a));
        } catch (ParseException ex) {
            Logger.getLogger(aso.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
    
    public int checkBox(JCheckBox a){
        if(a.isSelected()){
            return 1;
        }else{
            return 0;
        }
        
    }
    BD con = new BD();
    public void cadAso(){
        Connection c = con.conectar();
        try {
            PreparedStatement pesquisarStmt = c.prepareStatement("INSERT INTO aso VALUES (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?)");
            pesquisarStmt.setInt(1,Integer.parseInt(idPaciente.getText()));
            pesquisarStmt.setInt(2,Integer.parseInt(id_Empresa.getText()));
            pesquisarStmt.setString(3, tipoExame.getSelectedItem().toString());
            pesquisarStmt.setInt(4, checkBox(fisCalor));
            pesquisarStmt.setInt(5, checkBox(fisFrio));
            pesquisarStmt.setInt(6, checkBox(fisRuido));
            pesquisarStmt.setInt(7, checkBox(fisUmid));
            pesquisarStmt.setInt(8, checkBox(fisRad));
            pesquisarStmt.setInt(9, checkBox(fisOutros));
            pesquisarStmt.setInt(10, checkBox(quiGases));
            pesquisarStmt.setInt(11, checkBox(quiPoeiras));
            pesquisarStmt.setInt(12, checkBox(quiTintas));
            pesquisarStmt.setInt(13, checkBox(quiSolventes));
            pesquisarStmt.setInt(14, checkBox(quiProd));
            pesquisarStmt.setInt(15, checkBox(quiOutros));
            pesquisarStmt.setInt(16, checkBox(bioMicro));
            pesquisarStmt.setInt(17, checkBox(bioOutros));
            pesquisarStmt.setInt(18, checkBox(ergoMovPeso));
            pesquisarStmt.setInt(19, checkBox(ergoPost));
            pesquisarStmt.setInt(20, checkBox(ergoEsf));
            pesquisarStmt.setInt(21, checkBox(ergoTrabSentado));
            pesquisarStmt.setInt(22, checkBox(ergoTrabPe));
            pesquisarStmt.setInt(23, checkBox(ergoMovRep));
            pesquisarStmt.setInt(24, checkBox(ergoOutros));
            pesquisarStmt.setInt(25, checkBox(ausenciaRisc));
            pesquisarStmt.setString(26, cadData(exCli.getText()));
            pesquisarStmt.setString(27, cadData(exAud.getText()));
            pesquisarStmt.setString(28, cadData(exEspi.getText()));
            pesquisarStmt.setString(29, cadData(exECG.getText()));
            pesquisarStmt.setString(30, cadData(exHemo.getText()));
            pesquisarStmt.setString(31, cadData(exChagas.getText()));
            pesquisarStmt.setString(32, cadData(exGlice.getText()));
            pesquisarStmt.setString(33, cadData(exRX.getText()));
            pesquisarStmt.setString(34, cadData(exAcui.getText()));
            pesquisarStmt.setString(35, cadData(exCopropar.getText()));
            pesquisarStmt.setString(36, cadData(exCoprocult.getText()));
            pesquisarStmt.setString(37, cadData(exVDRL.getText()));
            pesquisarStmt.setString(38, cadData(exOutras1.getText()));
            pesquisarStmt.setString(39, cadData(exOutras2.getText()));
            pesquisarStmt.setString(40, cadData(exOutras3.getText()));
            pesquisarStmt.setString(41, exOutras1Texto.getText());
            pesquisarStmt.setString(42, exOutras2Texto.getText());
            pesquisarStmt.setString(43, exOutras3Texto.getText());
            pesquisarStmt.setString(44, conclusao.getSelectedItem().toString());
            pesquisarStmt.setString(45, restricoes.getText());
            pesquisarStmt.setString(46, cadData(data.getText()));
            pesquisarStmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Cadastrado");

            

            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error" + ex);
            Logger.getLogger(aso.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void attAso(){
        Connection c = con.conectar();
        try {
            PreparedStatement pesquisarStmt = c.prepareStatement("UPDATE aso SET id_Paciente = ?, id_Empresa = ?, tipoExame = ?, fisCalor = ?, fisFrio = ?, fisRuido = ?, fisUmid = ?, fisRad = ?, fisOutros = ?, quiGases = ?, quiPoeiras = ?, quiTintas = ?, quiSolventes = ?, quiProd = ?, quiOutros = ?, bioMicro = ?, bioOutros = ?, ergoMovPeso = ?, ergoPost = ?, ergoEsf = ?, ergoTrabSentado = ?, ergoTrabPe = ?, ergoMovRep = ?, ergoOutros = ?, ausenciaRisc = ?, exCli = ?, exAud = ?, exEspi = ?, exECG = ?, exHemo = ?, exChagas = ?, exGlice = ?, exRX = ?, exAcui = ?, exCopropar = ?, exCoprocult = ?, exVDRL = ?, exOutras1 = ?, exOutras2 = ?, exOutras3 = ?, exOutras1Texto = ?, exOutras2Texto = ?, exOutras3Texto = ?, conclusao = ?, restricoes = ?, data = ? WHERE idAso = ?");
            pesquisarStmt.setInt(1,Integer.parseInt(idPaciente.getText()));
            pesquisarStmt.setInt(2,Integer.parseInt(id_Empresa.getText()));
            pesquisarStmt.setString(3, tipoExame.getSelectedItem().toString());
            pesquisarStmt.setInt(4, checkBox(fisCalor));
            pesquisarStmt.setInt(5, checkBox(fisFrio));
            pesquisarStmt.setInt(6, checkBox(fisRuido));
            pesquisarStmt.setInt(7, checkBox(fisUmid));
            pesquisarStmt.setInt(8, checkBox(fisRad));
            pesquisarStmt.setInt(9, checkBox(fisOutros));
            pesquisarStmt.setInt(10, checkBox(quiGases));
            pesquisarStmt.setInt(11, checkBox(quiPoeiras));
            pesquisarStmt.setInt(12, checkBox(quiTintas));
            pesquisarStmt.setInt(13, checkBox(quiSolventes));
            pesquisarStmt.setInt(14, checkBox(quiProd));
            pesquisarStmt.setInt(15, checkBox(quiOutros));
            pesquisarStmt.setInt(16, checkBox(bioMicro));
            pesquisarStmt.setInt(17, checkBox(bioOutros));
            pesquisarStmt.setInt(18, checkBox(ergoMovPeso));
            pesquisarStmt.setInt(19, checkBox(ergoPost));
            pesquisarStmt.setInt(20, checkBox(ergoEsf));
            pesquisarStmt.setInt(21, checkBox(ergoTrabSentado));
            pesquisarStmt.setInt(22, checkBox(ergoTrabPe));
            pesquisarStmt.setInt(23, checkBox(ergoMovRep));
            pesquisarStmt.setInt(24, checkBox(ergoOutros));
            pesquisarStmt.setInt(25, checkBox(ausenciaRisc));
            pesquisarStmt.setString(26, cadData(exCli.getText()));
            pesquisarStmt.setString(27, cadData(exAud.getText()));
            pesquisarStmt.setString(28, cadData(exEspi.getText()));
            pesquisarStmt.setString(29, cadData(exECG.getText()));
            pesquisarStmt.setString(30, cadData(exHemo.getText()));
            pesquisarStmt.setString(31, cadData(exChagas.getText()));
            pesquisarStmt.setString(32, cadData(exGlice.getText()));
            pesquisarStmt.setString(33, cadData(exRX.getText()));
            pesquisarStmt.setString(34, cadData(exAcui.getText()));
            pesquisarStmt.setString(35, cadData(exCopropar.getText()));
            pesquisarStmt.setString(36, cadData(exCoprocult.getText()));
            pesquisarStmt.setString(37, cadData(exVDRL.getText()));
            pesquisarStmt.setString(38, cadData(exOutras1.getText()));
            pesquisarStmt.setString(39, cadData(exOutras2.getText()));
            pesquisarStmt.setString(40, cadData(exOutras3.getText()));
            pesquisarStmt.setString(41, exOutras1Texto.getText());
            pesquisarStmt.setString(42, exOutras2Texto.getText());
            pesquisarStmt.setString(43, exOutras3Texto.getText());
            pesquisarStmt.setString(44, conclusao.getSelectedItem().toString());
            pesquisarStmt.setString(45, restricoes.getText());
            
            pesquisarStmt.setString(46, cadData(data.getText()));
            
            pesquisarStmt.setInt(47, Integer.parseInt(idAso.getText()));
            pesquisarStmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Atualizado");

            

            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error" + ex);
            Logger.getLogger(aso.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void ausencia(){
        if(ausenciaRisc.isSelected()){
        fisCalor.setSelected(false);
        fisFrio.setSelected(false);
fisRuido.setSelected(false);
fisUmid.setSelected(false);
fisRad.setSelected(false);
fisOutros.setSelected(false);
quiGases.setSelected(false);
quiPoeiras.setSelected(false);
quiTintas.setSelected(false);
quiSolventes.setSelected(false);
quiProd.setSelected(false);
quiOutros.setSelected(false);
bioMicro.setSelected(false);
bioOutros.setSelected(false);
ergoMovPeso.setSelected(false);
ergoPost.setSelected(false);
ergoEsf.setSelected(false);
ergoTrabSentado.setSelected(false);
ergoTrabPe.setSelected(false);
ergoMovRep.setSelected(false);
ergoOutros.setSelected(false);
fisCalor.setEnabled(false);
fisFrio.setEnabled(false);
fisRuido.setEnabled(false);
fisUmid.setEnabled(false);
fisRad.setEnabled(false);
fisOutros.setEnabled(false);
quiGases.setEnabled(false);
quiPoeiras.setEnabled(false);
quiTintas.setEnabled(false);
quiSolventes.setEnabled(false);
quiProd.setEnabled(false);
quiOutros.setEnabled(false);
bioMicro.setEnabled(false);
bioOutros.setEnabled(false);
ergoMovPeso.setEnabled(false);
ergoPost.setEnabled(false);
ergoEsf.setEnabled(false);
ergoTrabSentado.setEnabled(false);
ergoTrabPe.setEnabled(false);
ergoMovRep.setEnabled(false);
ergoOutros.setEnabled(false);
        }else{
        fisCalor.setEnabled(true);
fisFrio.setEnabled(true);
fisRuido.setEnabled(true);
fisUmid.setEnabled(true);
fisRad.setEnabled(true);
fisOutros.setEnabled(true);
quiGases.setEnabled(true);
quiPoeiras.setEnabled(true);
quiTintas.setEnabled(true);
quiSolventes.setEnabled(true);
quiProd.setEnabled(true);
quiOutros.setEnabled(true);
bioMicro.setEnabled(true);
bioOutros.setEnabled(true);
ergoMovPeso.setEnabled(true);
ergoPost.setEnabled(true);
ergoEsf.setEnabled(true);
ergoTrabSentado.setEnabled(true);
ergoTrabPe.setEnabled(true);
ergoMovRep.setEnabled(true);
ergoOutros.setEnabled(true);
        }
    }
    public void pesquisarPaciente(){
        try{
            Connection c = con.conectar();
            
            PreparedStatement pesquisarStmt = c.prepareStatement("Select * from paciente t1 inner join empresa t2 on t1.id_Empresa = t2.idEmpresa where idPaciente = ?");
            pesquisarStmt.setInt(1, Integer.parseInt(idPaciente.getText()));
            ResultSet rs = pesquisarStmt.executeQuery();
            while(rs.next()){
                nome.setText(rs.getString("t1.nome"));
                nomeEmpresa.setText(rs.getString("t2.nome"));
                RG.setText(rs.getString("RG"));
                cargo.setText(rs.getString("Cargo"));
                dataNasc.setText(rs.getString("dataNasc"));
                id_Empresa.setText(rs.getString("t2.idEmpresa"));
            }
            
        }catch (SQLException e){
            JOptionPane.showMessageDialog(null, "Registro não encontrado");
            //System.out.println("Ocorreu um erro ao conectar");
        }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(aso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(aso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(aso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(aso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new aso().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField RG;
    private javax.swing.JCheckBox ausenciaRisc;
    private javax.swing.JCheckBox bioMicro;
    private javax.swing.JCheckBox bioOutros;
    private javax.swing.JButton cadAso;
    private javax.swing.JTextField cargo;
    private javax.swing.JCheckBox check1;
    private javax.swing.JCheckBox check10;
    private javax.swing.JCheckBox check11;
    private javax.swing.JCheckBox check12;
    private javax.swing.JCheckBox check13;
    private javax.swing.JCheckBox check2;
    private javax.swing.JCheckBox check3;
    private javax.swing.JCheckBox check4;
    private javax.swing.JCheckBox check5;
    private javax.swing.JCheckBox check6;
    private javax.swing.JCheckBox check7;
    private javax.swing.JCheckBox check8;
    private javax.swing.JCheckBox check9;
    private javax.swing.JComboBox<String> conclusao;
    private javax.swing.JTextField data;
    private javax.swing.JTextField dataNasc;
    private javax.swing.JCheckBox ergoEsf;
    private javax.swing.JCheckBox ergoMovPeso;
    private javax.swing.JCheckBox ergoMovRep;
    private javax.swing.JCheckBox ergoOutros;
    private javax.swing.JCheckBox ergoPost;
    private javax.swing.JCheckBox ergoTrabPe;
    private javax.swing.JCheckBox ergoTrabSentado;
    private javax.swing.JTextField exAcui;
    private javax.swing.JTextField exAud;
    private javax.swing.JTextField exChagas;
    private javax.swing.JTextField exCli;
    private javax.swing.JTextField exCoprocult;
    private javax.swing.JTextField exCopropar;
    private javax.swing.JTextField exECG;
    private javax.swing.JTextField exEspi;
    private javax.swing.JTextField exGlice;
    private javax.swing.JTextField exHemo;
    private javax.swing.JTextField exOutras1;
    private javax.swing.JTextField exOutras1Texto;
    private javax.swing.JTextField exOutras2;
    private javax.swing.JTextField exOutras2Texto;
    private javax.swing.JTextField exOutras3;
    private javax.swing.JTextField exOutras3Texto;
    private javax.swing.JTextField exRX;
    private javax.swing.JTextField exVDRL;
    private javax.swing.JCheckBox fisCalor;
    private javax.swing.JCheckBox fisFrio;
    private javax.swing.JCheckBox fisOutros;
    private javax.swing.JCheckBox fisRad;
    private javax.swing.JCheckBox fisRuido;
    private javax.swing.JCheckBox fisUmid;
    private javax.swing.JTextField idAso;
    private javax.swing.JLabel idAsoL;
    private javax.swing.JTextField idPaciente;
    private javax.swing.JTextField id_Empresa;
    private javax.swing.JButton imprimir;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField nome;
    private javax.swing.JTextField nomeEmpresa;
    private javax.swing.JLabel pesquisar;
    private javax.swing.JLabel pesquisar1;
    private javax.swing.JCheckBox quiGases;
    private javax.swing.JCheckBox quiOutros;
    private javax.swing.JCheckBox quiPoeiras;
    private javax.swing.JCheckBox quiProd;
    private javax.swing.JCheckBox quiSolventes;
    private javax.swing.JCheckBox quiTintas;
    private javax.swing.JTextField restricoes;
    private javax.swing.JTabbedPane riscos;
    private javax.swing.JComboBox<String> tipoExame;
    // End of variables declaration//GEN-END:variables
}
